// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: families.sql

package store

import (
	"context"
	"database/sql"
)

const getFamiliesByUserID = `-- name: GetFamiliesByUserID :many
SELECT f.id, f.name, f.created_at, f.is_active, f.description, f.owner_id 
FROM families f
JOIN family_members fm ON f.id = fm.family_id
WHERE fm.user_id = ?
`

func (q *Queries) GetFamiliesByUserID(ctx context.Context, userID sql.NullString) ([]Family, error) {
	rows, err := q.db.QueryContext(ctx, getFamiliesByUserID, userID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Family
	for rows.Next() {
		var i Family
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.CreatedAt,
			&i.IsActive,
			&i.Description,
			&i.OwnerID,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
